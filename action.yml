name: 'GoCD Jsonnet'
description: 'This action checks Jsonnet files to build, lint, fmt and ensure commited pipelines are up-to-date'
inputs:
  jsonnet-dir:
    description: 'The path for jsonnet files'
    required: true
    default: './gocd/'
  generated-dir:
    description: 'The path for jsonnet files are rendered to'
    required: true
    default: './gocd/generated-pipelines/'
  jb-install:
    description: "When true, jb install will be run"
    type: boolean
    default: false
  check-for-changes:
    description: "If the generated pipelines are store, set this to true"
    type: boolean
    default: false
runs:
  using: "composite"
  steps:
    # Get the code
    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

    - name: Install go
      uses: actions/setup-go@v4
    - name: Install Jsonnet
      shell: bash
      run: |
        go install github.com/google/go-jsonnet/cmd/jsonnet@latest
        go install github.com/google/go-jsonnet/cmd/jsonnetfmt@latest
        go install github.com/google/go-jsonnet/cmd/jsonnet-lint@latest
        go install -a github.com/jsonnet-bundler/jsonnet-bundler/cmd/jb@latest

    - name: jsonnet bundler install
      shell: bash
      if: ${{ inputs.jb-install == 'true' }}
      run: |
        cd ${{inputs.jsonnet-dir}}
        jb install

    - name: jsonnetfmt
      id: jsonnetfmt
      shell: bash
      run: ./scripts/jsonnetfmt.sh ${{inputs.jsonnet-dir}}

    - name: jsonnetfmt error
      shell: bash
      if: steps.jsonnetfmt.outcome == 'failure' && always()
      run: echo -e "\n\n⚠️ Please run 'jsonnetfmt -i **/*.jsonnet && jsonnetfmt -i **/*.libsonnet' to fix formatting issues.\n\n"

    - name: jsonnet-lint
      shell: bash
      run: ./scripts/jsonnetlint.sh ${{inputs.jsonnet-dir}}

    - name: Remove existing pipelines to ensure we don't have lingering pipelines
      shell: bash
      run: |
        rm -rf   ${{inputs.generated-dir}}
        mkdir -p ${{inputs.generated-dir}}

    - name: Render and Diff
      shell: bash
      run: ./scripts/jsonnet-render.sh ${{inputs.jsonnet-dir}} ${{inputs.generated-dir}}

    - name: Fail if generated pipelines have changed
      if: ${{ inputs.check-for-changes == 'true' }}
      shell: bash
      run: if [ -n "$(git status --porcelain)" ] ; then git status; exit 1; fi
